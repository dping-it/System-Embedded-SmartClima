
: ':' [ CHAR : ] LITERAL ;
: ';' [ CHAR ; ] LITERAL ;
: '(' [ CHAR ( ] LITERAL ;
: ')' [ CHAR ) ] LITERAL ;
: '"' [ CHAR " ] LITERAL ;
: '.' [ CHAR . ] LITERAL ;

: ( IMMEDIATE 1 BEGIN KEY DUP '(' = IF DROP 1+ ELSE ')' = IF 1- THEN THEN DUP 0= UNTIL DROP ;
: SPACES BEGIN DUP 0> WHILE SPACE 1- REPEAT DROP ;
: WITHIN -ROT OVER <= IF > IF TRUE ELSE FALSE THEN ELSE 2DROP FALSE THEN ;
: ALIGNED 3 + 3 INVERT AND ;
: ALIGN HERE @ ALIGNED HERE ! ;
: C, HERE @ C! 1 HERE +! ;
: S" IMMEDIATE ( -- addr len )
	STATE @ IF
		' LITS , HERE @ 0 ,
		BEGIN KEY DUP '"'
                <> WHILE C, REPEAT
		DROP DUP HERE @ SWAP - 4- SWAP ! ALIGN
	ELSE
		HERE @
		BEGIN KEY DUP '"'
                <> WHILE OVER C! 1+ REPEAT
		DROP HERE @ - HERE @ SWAP
	THEN
;

: ." IMMEDIATE ( -- )
	STATE @ IF
		[COMPILE] S" ' TELL ,
	ELSE
		BEGIN KEY DUP '"' = IF DROP EXIT THEN EMIT AGAIN
	THEN
;


: JF-HERE   HERE ;
: JF-CREATE   CREATE ;
: JF-FIND   FIND ;
: JF-WORD   WORD ;

: HERE   JF-HERE @ ;
: ALLOT   HERE + JF-HERE ! ;

: [']   ' LIT , ; IMMEDIATE
: '   JF-WORD JF-FIND >CFA ;

: CELL+  4 + ;

: ALIGNED   3 + 3 INVERT AND ;
: ALIGN JF-HERE @ ALIGNED JF-HERE ! ;

: DOES>CUT   LATEST @ >CFA @ DUP JF-HERE @ > IF JF-HERE ! ;

: CREATE   JF-WORD JF-CREATE DOCREATE , ;
: (DODOES-INT)  ALIGN JF-HERE @ LATEST @ >CFA ! DODOES> ['] LIT ,  LATEST @ >DFA , ;
: (DODOES-COMP)  (DODOES-INT) ['] LIT , , ['] FIP! , ;
: DOES>COMP   ['] LIT , HERE 3 CELLS + , ['] (DODOES-COMP) , ['] EXIT , ;
: DOES>INT   (DODOES-INT) LATEST @ HIDDEN ] ;
: DOES>   STATE @ 0= IF DOES>INT ELSE DOES>COMP THEN ; IMMEDIATE
: UNUSED ( -- n ) PAD HERE @ - 4/ ;

DROP

: AUTHOR
	S" TEST-MODE" FIND NOT IF
		." AUTHOR DAVIDE PROIETTO " VERSION . CR
		UNUSED . ." CELLS REMAINING" CR
		." OK "
	THEN
;


HEX
FE000000 CONSTANT DEVBASE
DEVBASE 200000 + CONSTANT GPFSEL0
DEVBASE 200004 + CONSTANT GPFSEL1
DEVBASE 200008 + CONSTANT GPFSEL2
DEVBASE 200040 + CONSTANT GPEDS0
DEVBASE 20001C + CONSTANT GPSET0
DEVBASE 200028 + CONSTANT GPCLR0
DEVBASE 200034 + CONSTANT GPLEV0
DEVBASE 200058 + CONSTANT GPFEN0

: MASK 1 SWAP LSHIFT ;

: HIGH 
  MASK GPSET0 ! ;

: LOW 
  MASK GPCLR0 ! ;

: TPIN GPLEV0 @ SWAP RSHIFT 1 AND ;

: DELAY 
  BEGIN 1 - DUP 0 = UNTIL DROP ;




: SETUP_I2C 
  900 GPFSEL0 @ OR GPFSEL0 ! ;

: RESET_S 
  302 DEVBASE 804004 + ! ;

: RESET_FIFO
  10 DEVBASE 804000 + ! ;

: SET_SLAVE 
  27 DEVBASE 80400C + ! ;

: STORE_DATA
  DEVBASE 804010 + ! ;

: SEND 
  8080 DEVBASE 804000 + ! ;

: >I2C
  RESET_S
  RESET_FIFO
  1 DEVBASE 804008 + !
  SET_SLAVE
  STORE_DATA
  SEND ;

: 4BM>LCD 
  F0 AND DUP ROT
  D + OR >I2C 1000 DELAY
  8 OR >I2C 1000 DELAY ;

: 4BL>LCD 
  F0 AND DUP
  D + OR >I2C 1000 DELAY
  8 OR >I2C 1000 DELAY ;

: >LCDL
 DUP 4 RSHIFT 4BL>LCD
 4BL>LCD ;

: >LCDM
  OVER OVER F0 AND 4BM>LCD
  F AND 4 LSHIFT 4BM>LCD ;

: IS_CMD 
  DUP 8 RSHIFT 1 = ;

: >LCD 
  IS_CMD SWAP >LCDM 
;


: WELCOME
  57 >LCD 
  45 >LCD
  4C >LCD
  43 >LCD  
  4F >LCD
  4D >LCD
  45 >LCD ;

: NOT_VALID 
  4E >LCD
  4F >LCD
  54 >LCD
  20 >LCD
  56 >LCD
  41 >LCD
  4C >LCD
  49 >LCD
  44 >LCD ;

: SMARTS 
    53 >LCD 
    4D >LCD
    41 >LCD
    52 >LCD  
    54 >LCD
    20 >LCD
    53 >LCD
    59 >LCD  
    53 >LCD
    54 >LCD
    45 >LCD
    4D >LCD ;


: CLEAR
  101 >LCD ;

: >LINE2
  1C0 >LCD ;

: SETUP_LCD 
  102 >LCD ;


DEC

CONSTANT OK_POS 3

CONSTANT OP_POS 2

CONSTANT OK_C 23

CONSTANT ON_C A
CONSTANT OFF_C B
CONSTANT GET_C C

CONSTANT DEV_NO 99

CREATE D_CMDS
D_CMDS OK_POS CELLS ALLOT

CREATE DEVS
DEVS DEV_NO 1 - CELLS ALLOT

: 2DEV 
  D_CMDS @ 4 LSHIFT
  D_CMDS CELL+ @ 
  OR ;

: D_SET 
  >R DEVS 2DEV 4 * + R> SWAP ;

: >OPEN 
  ON_C D_SET ! ;

: >CLOSE 
  OFF_C D_SET ! ;

: <STATE 
  DEVS 2DEV 4 * + @ ;

: ?CMD
  D_CMDS OK_POS 4 * + @ OK_C = ;

: OP_TYPE 
  D_CMDS OP_POS 4 * + @ DUP 
  ON_C = IF 
    DROP >OPEN
  ELSE DUP OFF_C = IF 
    DROP >CLOSE
  ELSE GET_C = IF
    <STATE
  THEN THEN THEN ;

CREATE AUX_I
: RES_CMD 
  0 AUX_I !
  BEGIN 
  D_CMDS AUX_I @ 4 * + ! 
  AUX_I @ 1 + AUX_I !
  AUX_I @ OK_POS 1 + = UNTIL ;

: XCMD 
  ?CMD IF 
    OP_TYPE 
    1000 DELAY 4F >LCD
    1000 DELAY 4B >LCD
  ELSE 
    CLEAR 
    1000 DELAY NOT_VALID 
    3000 DELAY CLEAR
  THEN 
;




: SETUP_ROWS 
  3840000 GPFEN0 ! ;

: SETUP_IO 
  1000000 GPFSEL1 @ OR GPFSEL1 ! 
  9200 GPFSEL2 @ OR GPFSEL2 ! ;

: CLEAR_ROWS 
  3840000 GPCLR0 ! ;

: SETUP_KEYPAD 
  SETUP_ROWS 
  SETUP_IO 
  CLEAR_ROWS ;

: PRESSED 
  TPIN 1 = IF 1 ELSE 0 THEN ;

CREATE COUNTER

: COUNTER++ 
  COUNTER @ 1 + COUNTER ! ;

: EMIT_STORE 
  DUP 500 DELAY >LCD 
  D_CMDS
  COUNTER @ CELL+ * ! ;

: EMITC1 
  DUP 12 = IF 41 DUP EMIT_STORE DROP ELSE 
  DUP 17 = IF 42 DUP EMIT_STORE DROP ELSE 
  DUP 18 = IF 43 DUP EMIT_STORE DROP ELSE 
  19 = IF 44 DUP EMIT_STORE 
  THEN THEN THEN THEN ;

: EMITC2 
  DUP 12 = IF 33 DUP EMIT_STORE DROP ELSE 
  DUP 17 = IF 36 DUP EMIT_STORE DROP ELSE 
  DUP 18 = IF 39 DUP EMIT_STORE DROP ELSE 
  19 = IF 23 DUP EMIT_STORE 
  THEN THEN THEN THEN ;

: EMITC3 
  DUP 12 = IF 32 DUP EMIT_STORE DROP ELSE 
  DUP 17 = IF 35 DUP EMIT_STORE DROP ELSE 
  DUP 18 = IF 38 DUP EMIT_STORE DROP ELSE 
  19 = IF 30 DUP EMIT_STORE 
  THEN THEN THEN THEN ;

: EMITC4 
  DUP 12 = IF 31 DUP EMIT_STORE DROP ELSE 
  DUP 17 = IF 34 DUP EMIT_STORE DROP ELSE 
  DUP 18 = IF 37 DUP EMIT_STORE DROP ELSE 
  19 = IF 2A DUP EMIT_STORE 
  THEN THEN THEN THEN ;

: EMIT_R
  DUP 10 = IF DROP EMITC1 ELSE 
  DUP 16 = IF DROP EMITC2 ELSE 
  DUP 1B = IF DROP EMITC3 ELSE 
  A = IF EMITC4 
  THEN THEN THEN THEN ;

: CHECK_CL 
  DUP DUP
    PRESSED 1 = IF 1000 DELAY 
    PRESSED 0 = IF 1000 DELAY 
      EMIT_R
      COUNTER++ 
    ELSE DROP DROP 
    THEN
    ELSE DROP DROP DROP 
  THEN ;

: CHECK_ROW
  DUP DUP DUP DUP DUP 
  HIGH  
    10 CHECK_CL 
    16 CHECK_CL
    1B CHECK_CL
    A CHECK_CL
  LOW ;

: ?CTR 
  COUNTER @ 4 = ;

: RES_CTR 
  0 COUNTER ! ;

: DETECT
  0 COUNTER !
  BEGIN 
    12 CHECK_ROW
    17 CHECK_ROW
    18 CHECK_ROW
    19 CHECK_ROW
  ?CTR UNTIL 
;
: INIT
  SETUP_I2C
  SETUP_LCD
  SETUP_KEYPAD
  WELCOME
  LINE2
  SMARTS
  30000 DELAY
  CLEAR
  BEGIN
    RES_CMD
    DETECT
    1 0 = UNTIL
    ;

